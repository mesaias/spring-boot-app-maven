pipeline {

  agent { kubernetes { inheritFrom 'spring' } }

  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub') // Provide the ID of your Docker Hub credentials stored in Jenkins
    }
      steps {
          container('docker-in-docker-maven') {
          sh 'ls -ltr'
          // build the project and create a JAR file
          sh '''
          mvn clean package
          docker build . -t mesaias/spring-boot-app-maven:${BUILD_NUMBER}
          docker push mesaias/spring-boot-app-maven:${BUILD_NUMBER}
          '''
          //docker build . -t 10.152.183.114:5000/spring-boot-app-maven:${BUILD_NUMBER}
          //docker push 10.152.183.114:5000/spring-boot-app-maven:${BUILD_NUMBER}
        }
      }
    }

    /*stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://34.201.116.83:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }*/
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "spring-boot-app-maven"
            GIT_USER_NAME = "mesaias"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    ls manifests
                    git config user.email "mesaias.879@gmail.com"
                    git config user.name "Isaias Solorio"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" manifests/deployment-to-replace.yaml
                    cat manifests/deployment-to-replace.yaml > manifests/deployment.yaml
                    git add manifests/deployment.yaml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
    stage('Update deployment') {
      steps {
        container('helm-kubectl') {
          sh "kubectl apply -f manifests/deployment.yaml"
          sh "kubectl apply -f manifests/service.yaml"
        }
      }
    }
  }
}